C51 COMPILER V9.54   UART                                                                  04/30/2017 19:51:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.obj
COMPILER INVOKED BY: J:\program\keil\C51\BIN\C51.EXE class\uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\uart.lst) TABS(2) OBJECT(uart.obj)

line level    source

   1          #include"uart.h"
   2           bit busy=0;
   3           unsigned char uartrecv[16];
   4           unsigned char _uartrecvindex = 0;
   5           char _readed = 1;
   6           unsigned char _starttag[5] = {0x7F,0x0E,0x00,0xA0,0x00};
   7          
   8          void uartinit()
   9          {
  10   1          ACC = P_SW1;
  11   1          ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=0
  12   1          P_SW1 = ACC;                //(P3.0/RxD, P3.1/TxD)
  13   1          
  14   1      //  ACC = P_SW1;
  15   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=1 S1_S1=0
  16   1      //  ACC |= S1_S0;               //(P3.6/RxD_2, P3.7/TxD_2)
  17   1      //  P_SW1 = ACC;  
  18   1      //  
  19   1      //  ACC = P_SW1;
  20   1      //  ACC &= ~(S1_S0 | S1_S1);    //S1_S0=0 S1_S1=1
  21   1      //  ACC |= S1_S1;               //(P1.6/RxD_3, P1.7/TxD_3)
  22   1      //  P_SW1 = ACC;  
  23   1      //  _cashcallback = &cashcard;
  24   1      #if (PARITYBIT == NONE_PARITY)
  25   1          SCON = 0x50;                //8位可变波特率
  26   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  SCON = 0xda;                //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  SCON = 0xd2;                //9位可变波特率,校验位初始为0
              #endif
  31   1      
  32   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  33   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  34   1          AUXR = 0x14;                //T2为1T模式, 并启动定时器2
  35   1          AUXR |= 0x01;               //选择定时器2为串口1的波特率发生器
  36   1          ES = 1;                     //使能串口1中断
  37   1          EA = 1;
  38   1      }
  39          /*----------------------------
  40          UART 中断服务程序
  41          -----------------------------*/
  42          void Uart() interrupt 4 using 1
  43          {
  44   1          if (RI)
  45   1          {
  46   2              RI = 0;                 //清除RI位
  47   2              _handlercash();
  48   2          }
  49   1          if (TI)
  50   1          {
  51   2              TI = 0;                 //清除TI位
  52   2              busy = 0;               //清忙标志
  53   2          }
  54   1      }
C51 COMPILER V9.54   UART                                                                  04/30/2017 19:51:38 PAGE 2   

  55          /*----------------------------
  56          发送串口数据
  57          ----------------------------*/
  58          void SendData(BYTE dat)
  59          {
  60   1          while (busy);               //等待前面的数据发送完成
  61   1          ACC = dat;                  //获取校验位P (PSW.0)
  62   1          if (P)                      //根据P来设置校验位
  63   1          {
  64   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;                //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;                //设置校验位为1
              #endif
  69   2          }
  70   1          else
  71   1          {
  72   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;                //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;                //设置校验位为0
              #endif
  77   2          }
  78   1          busy = 1;
  79   1          SBUF = ACC;                 //写数据到UART数据寄存器
  80   1      }
  81          
  82          /*----------------------------
  83          发送字符串
  84          ----------------------------*/
  85          void SendString(char *s)
  86          {   
  87   1        unsigned char i=0;
  88   1          while (*(s+i))                  //检测字符串结束标志
  89   1          {
  90   2              SendData(*(s+i));         //发送当前字符
  91   2          i++;
  92   2          }
  93   1      }
  94          unsigned char* getuartbuf()
  95          {
  96   1        return  uartrecv;
  97   1      }
  98          unsigned char getuartbuflen()
  99          {
 100   1        return _uartrecvindex;
 101   1      }
 102          char getreaded()
 103          {
 104   1        return _readed;
 105   1      }
 106          void setread(char read)
 107          {
 108   1        if(read==1) _uartrecvindex = 0;
 109   1         _readed = read;
 110   1      }
 111          void _handlercash()
 112          {
 113   1          char _recvbuf = 0;
 114   1          if(getreaded() != 1) 
 115   1          {
 116   2            return;//数据尚未处理
C51 COMPILER V9.54   UART                                                                  04/30/2017 19:51:38 PAGE 3   

 117   2          }
 118   1          _recvbuf = SBUF;
 119   1          if(_uartrecvindex < 5 && (_recvbuf != _starttag[_uartrecvindex]))
 120   1          {
 121   2            _uartrecvindex = 0;
 122   2            setread(-1);//非法数据
 123   2            return;
 124   2          }
 125   1          if(_uartrecvindex >= 5)uartrecv[_uartrecvindex - 5] = _recvbuf;
 126   1          _uartrecvindex++;
 127   1          //if(_uartrecvindex == 5) _uartrecvindex = 0;
 128   1          if (_uartrecvindex > 15)
 129   1          {
 130   2            _uartrecvindex -= 5;
 131   2            //接收数据完毕
 132   2            setread(0);
 133   2          }
 134   1          
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    239    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     23       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
