C51 COMPILER V9.54   NRF24L01                                                              04/26/2017 14:51:06 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE NRF24L01
OBJECT MODULE PLACED IN NRF24L01.obj
COMPILER INVOKED BY: J:\program\keil\C51\BIN\C51.EXE class\NRF24L01.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\NRF24L01.lst) TABS(2) OBJECT(NRF24L01.obj)

line level    source

   1          #include"NRF24L01.h"
   2          //#include"reg52.h"
   3          //#include"Allhead.h"
   4          //sbit CE=P1^2;  //RX/TXÄ£Ê½Ñ¡Ôñ¶Ë
   5          //sbit IRQ=P1^3; //¿ÉÆÁ±ÎÖÐ¶Ï¶Ë
   6          //sbit CSN=P1^4; //SPIÆ¬Ñ¡¶Ë//¾ÍÊÇSS
   7          //sbit MOSI=P1^5; //SPIÖ÷»úÊä³ö´Ó»úÊäÈë¶Ë
   8          //sbit MISO=P1^6; //SPIÖ÷»úÊä³ö´Ó»úÊä³ö¶Ë
   9          //sbit SCLK=P1^7; //SPIÊ±ÖÓ¶Ë
  10            sbit IRQ = P4^7;
  11            sbit CE =  P1^4;
  12            sbit CSN=  P1^0;
  13            sbit SCLK=  P1^3;
  14            sbit MOSI= P1^1;
  15            sbit MISO= P1^2;
  16          unsigned char RevTempDate0[5];//Í¬µÀ0½ÓÊÕÊý¾Ý
  17          
  18          unsigned char code RxAddr0[]={0x34,0x43,0x10,0x10,0x01};//±àºÅ3½ÓÊÕµØÖ·Õâ¸öµØÖ·ºÍ·¢ËÍ·½µØÖ·Ò»Ñù!
  19          //unsigned char code RxAddr1[]={0xc2,0xc2,0xc2,0xc2,0xd1};//±àºÅ2
  20          //unsigned char code RxAddr2[]={0xc2,0xc2,0xc2,0xc2,0xc1};//±àºÅ1
  21          /*****************×´Ì¬±êÖ¾*****************************************/
  22          unsigned char  bdata sta;   //×´Ì¬±êÖ¾
  23          sbit RX_DR=sta^6;
  24          sbit TX_DS=sta^5;
  25          sbit MAX_RT=sta^4;
  26          /*****************SPIÊ±Ðòº¯Êý******************************************/
  27          unsigned char NRFSPI(unsigned char date)
  28          {
  29   1          unsigned char i;
  30   1          for(i=0;i<8;i++)          // Ñ­»·8´Î
  31   1          {
  32   2          if(date&0x80)
  33   2            MOSI=1;
  34   2          else
  35   2            MOSI=0;   // byte×î¸ßÎ»Êä³öµ½MOSI
  36   2            date<<=1;             // µÍÒ»Î»ÒÆÎ»µ½×î¸ßÎ»
  37   2            SCLK=1; 
  38   2          if(MISO)               // À­¸ßSCK£¬nRF24L01´ÓMOSI¶ÁÈë1Î»Êý¾Ý£¬Í¬Ê±´ÓMISOÊä³ö1Î»Êý¾Ý
  39   2              date|=0x01;         // ¶ÁMISOµ½byte×îµÍÎ»
  40   2            SCLK=0;             // SCKÖÃµÍ
  41   2          }
  42   1          return(date);             // ·µ»Ø¶Á³öµÄÒ»×Ö½Ú
  43   1      }
  44          /**********************NRF24L01³õÊ¼»¯º¯Êý*******************************/
  45          void NRF24L01Int()
  46          {
  47   1        NRFDelay(2);//ÈÃÏµÍ³Ê²Ã´¶¼²»¸É
  48   1        CE=0;
  49   1        CSN=1;  
  50   1        SCLK=0;
  51   1        IRQ=1; 
  52   1      }
  53          /*****************SPI¶Á¼Ä´æÆ÷Ò»×Ö½Úº¯Êý*********************************/
  54          unsigned char NRFReadReg(unsigned char RegAddr)
C51 COMPILER V9.54   NRF24L01                                                              04/26/2017 14:51:06 PAGE 2   

  55          {
  56   1         unsigned char BackDate;
  57   1         CSN=0;//Æô¶¯Ê±Ðò
  58   1         NRFSPI(RegAddr);//Ð´¼Ä´æÆ÷µØÖ·
  59   1         BackDate=NRFSPI(0x00);//Ð´Èë¶Á¼Ä´æÆ÷Ö¸Áî  
  60   1         CSN=1;
  61   1         return(BackDate); //·µ»Ø×´Ì¬
  62   1      }
  63          /*****************SPIÐ´¼Ä´æÆ÷Ò»×Ö½Úº¯Êý*********************************/
  64          unsigned char NRFWriteReg(unsigned char RegAddr,unsigned char date)
  65          {
  66   1         unsigned char BackDate;
  67   1         CSN=0;//Æô¶¯Ê±Ðò
  68   1         BackDate=NRFSPI(RegAddr);//Ð´ÈëµØÖ·
  69   1         NRFSPI(date);//Ð´ÈëÖµ
  70   1         CSN=1;  
  71   1         return(BackDate);
  72   1      }
  73          /*****************SPI¶ÁÈ¡RXFIFO¼Ä´æÆ÷µÄÖµ********************************/
  74          unsigned char NRFReadRxDate(unsigned char RegAddr,unsigned char *RxDate,unsigned char DateLen)
  75          {  //¼Ä´æÆ÷µØÖ·//¶ÁÈ¡Êý¾Ý´æ·Å±äÁ¿//¶ÁÈ¡Êý¾Ý³¤¶È//ÓÃÓÚ½ÓÊÕ
  76   1          unsigned char BackDate,i;
  77   1        CSN=0;//Æô¶¯Ê±Ðò
  78   1        BackDate=NRFSPI(RegAddr);//Ð´ÈëÒª¶ÁÈ¡µÄ¼Ä´æÆ÷µØÖ·
  79   1        for(i=0;i<DateLen;i++) //¶ÁÈ¡Êý¾Ý
  80   1          {
  81   2             RxDate[i]=NRFSPI(0);
  82   2          } 
  83   1          CSN=1;
  84   1         return(BackDate); 
  85   1      }
  86          /*****************SPIÐ´ÈëTXFIFO¼Ä´æÆ÷µÄÖµ**********************************/
  87          unsigned char NRFWriteTxDate(unsigned char RegAddr,unsigned char *TxDate,unsigned char DateLen)
  88          { //¼Ä´æÆ÷µØÖ·//Ð´ÈëÊý¾Ý´æ·Å±äÁ¿//¶ÁÈ¡Êý¾Ý³¤¶È//ÓÃÓÚ·¢ËÍ
  89   1         unsigned char BackDate,i;
  90   1         CSN=0;
  91   1         BackDate=NRFSPI(RegAddr);//Ð´ÈëÒªÐ´Èë¼Ä´æÆ÷µÄµØÖ·
  92   1         for(i=0;i<DateLen;i++)//Ð´ÈëÊý¾Ý
  93   1           {
  94   2            NRFSPI(*TxDate++);
  95   2         }   
  96   1         CSN=1;
  97   1         return(BackDate);
  98   1      }
  99          /*****************NRFÉèÖÃÎª·¢ËÍÄ£Ê½²¢·¢ËÍÊý¾Ý******************************/
 100          void NRFSetTxMode(unsigned char *TxDate)
 101          {  //·¢ËÍÄ£Ê½ 
 102   1          CE=0;   
 103   1          NRFWriteTxDate(W_REGISTER+TX_ADDR,RxAddr0,TX_ADDR_WITDH);//Ð´¼Ä´æÆ÷Ö¸Áî+P0µØÖ·Ê¹ÄÜÖ¸Áî+·¢ËÍµØÖ·+µØÖ·¿í
             -¶È
 104   1        NRFWriteTxDate(W_TX_PAYLOAD,TxDate,TX_DATA_WITDH);//Ð´ÈëÊý¾Ý 
 105   1        /******ÏÂÃæÓÐ¹Ø¼Ä´æÆ÷ÅäÖÃ**************/
 106   1          NRFWriteReg(W_REGISTER+EN_AA,0x01);       // Ê¹ÄÜ½ÓÊÕÍ¨µÀ0×Ô¶¯Ó¦´ð
 107   1          NRFWriteReg(W_REGISTER+EN_RXADDR,0x01);   // Ê¹ÄÜ½ÓÊÕÍ¨µÀ0
 108   1          NRFWriteReg(W_REGISTER+SETUP_RETR,0x0a);  // ×Ô¶¯ÖØ·¢ÑÓÊ±µÈ´ý250us+86us£¬×Ô¶¯ÖØ·¢10´Î
 109   1          NRFWriteReg(W_REGISTER+RF_CH,0x40);         // Ñ¡ÔñÉäÆµÍ¨µÀ0x40
 110   1          NRFWriteReg(W_REGISTER+RF_SETUP,0x07);    // Êý¾Ý´«ÊäÂÊ1Mbps£¬·¢Éä¹¦ÂÊ0dBm£¬µÍÔëÉù·Å´óÆ÷ÔöÒæ
 111   1          NRFWriteReg(W_REGISTER+CONFIG,0x0e);      // CRCÊ¹ÄÜ£¬16Î»CRCÐ£Ñé£¬ÉÏµç 
 112   1        CE=1; 
 113   1        NRFDelay(5);//±£³Ö10usÃëÒÔÉÏ
 114   1      } 
 115          /*****************NRFÉèÖÃÎª½ÓÊÕÄ£Ê½²¢½ÓÊÕÊý¾Ý******************************/
C51 COMPILER V9.54   NRF24L01                                                              04/26/2017 14:51:06 PAGE 3   

 116          //½ÓÊÕÄ£Ê½
 117          void NRFSetRXMode()
 118          {
 119   1          CE=0;
 120   1          NRFWriteTxDate(W_REGISTER+RX_ADDR_P0,RxAddr0,TX_ADDR_WITDH);  // ½ÓÊÕÉè±¸½ÓÊÕÍ¨µÀ0Ê¹ÓÃºÍ·¢ËÍÉè±¸ÏàÍ¬µÄ·
             -¢ËÍµØÖ·
 121   1      //  NRFWriteTxDate(W_REGISTER+RX_ADDR_P1,RxAddr1,TX_ADDR_WITDH);  // ½ÓÊÕÉè±¸½ÓÊÕÍ¨µÀ1Ê¹ÓÃºÍ·¢ËÍÉè±¸ÏàÍ¬µÄ·
             -¢ËÍµØÖ·
 122   1      //    NRFWriteTxDate(W_REGISTER+RX_ADDR_P2,RxAddr2,TX_ADDR_WITDH);  // ½ÓÊÕÉè±¸½ÓÊÕÍ¨µÀ2Ê¹ÓÃºÍ·¢ËÍÉè±¸ÏàÍ¬µ
             -Ä·¢ËÍµØÖ·
 123   1      
 124   1        NRFWriteReg(W_REGISTER+EN_AA,0x03);               // Ê¹ÄÜÊý¾ÝÍ¨µÀ0ºÍ1×Ô¶¯Ó¦´ð
 125   1          NRFWriteReg(W_REGISTER+EN_RXADDR,0x03);           // Ê¹ÄÜ½ÓÊÕÍ¨µÀ0ºÍ1
 126   1                   
 127   1          NRFWriteReg(W_REGISTER+RX_PW_P0,TX_DATA_WITDH);  // ½ÓÊÕÍ¨µÀ0Ñ¡ÔñºÍ·¢ËÍÍ¨µÀÏàÍ¬ÓÐÐ§Êý¾Ý¿í¶È
 128   1        NRFWriteReg(W_REGISTER+RX_PW_P1,TX_DATA_WITDH);  // ½ÓÊÕÍ¨µÀ1Ñ¡ÔñºÍ·¢ËÍÍ¨µÀÏàÍ¬ÓÐÐ§Êý¾Ý¿í¶È
 129   1          NRFWriteReg(W_REGISTER+RX_PW_P2,TX_DATA_WITDH);  // ½ÓÊÕÍ¨µÀ2Ñ¡ÔñºÍ·¢ËÍÍ¨µÀÏàÍ¬ÓÐÐ§Êý¾Ý¿í¶È
 130   1      
 131   1        NRFWriteReg(W_REGISTER+RF_CH,0x40);// Ñ¡ÔñÉäÆµÍ¨µÀ0x40 
 132   1        NRFWriteReg(W_REGISTER+RF_SETUP,0x07);            // Êý¾Ý´«ÊäÂÊ1Mbps£¬·¢Éä¹¦ÂÊ0dBm£¬µÍÔëÉù·Å´óÆ÷ÔöÒæ
 133   1        NRFWriteReg(W_REGISTER+CONFIG,0x0f);             // CRCÊ¹ÄÜ£¬16Î»CRCÐ£Ñé£¬ÉÏµç£¬½ÓÊÕÄ£Ê½     
 134   1          CE = 1; 
 135   1        NRFDelay(5);    
 136   1      }
 137          /****************************¼ì²âÊÇ·ñÓÐ½ÓÊÕµ½Êý¾Ý******************************/
 138          void CheckACK()
 139          {  //ÓÃÓÚ·¢ÉäÄ£Ê½½ÓÊÕÓ¦´ðÐÅºÅ
 140   1        sta=NRFReadReg(R_REGISTER+STATUS);                    // ·µ»Ø×´Ì¬¼Ä´æÆ÷
 141   1        if(TX_DS)
 142   1           NRFWriteReg(W_REGISTER+STATUS,0xff);  // Çå³ýTX_DS»òMAX_RTÖÐ¶Ï±êÖ¾
 143   1      }
 144          /*************************½ÓÊÕÊý¾Ý*********************************************/
 145          void GetDate()         
 146          {
 147   1        char i = 0;
 148   1          unsigned char RX_P_NO;//½ÓÊÕÍ¨µÀºÅ
 149   1        sta=NRFReadReg(R_REGISTER+STATUS);//·¢ËÍÊý¾Ýºó¶ÁÈ¡×´Ì¬¼Ä´æÆ÷
 150   1          if(RX_DR)       // ÅÐ¶ÏÊÇ·ñ½ÓÊÕµ½Êý¾Ý
 151   1           {
 152   2           RX_P_NO=sta&0x0e;//»ñÈ¡Í¨µÀºÅ
 153   2           CE=0;//´ý»ú 
 154   2           switch(RX_P_NO)
 155   2            {
 156   3             case 0x00:NRFReadRxDate(R_RX_PAYLOAD,RevTempDate0,RX_DATA_WITDH);break;// ´ÓRXFIFO¶ÁÈ¡Êý¾ÝÍ¨µÀ0
 157   3      //       case 0x02:NRFReadRxDate(R_RX_PAYLOAD,RevTempDate1,RX_DATA_WITDH);break;// ´ÓRXFIFO¶ÁÈ¡Êý¾ÝÍ¨µÀ1
 158   3      //       case 0x04:NRFReadRxDate(R_RX_PAYLOAD,RevTempDate2,RX_DATA_WITDH);break;// ´ÓRXFIFO¶ÁÈ¡Êý¾ÝÍ¨µÀ2
 159   3             default:break;
 160   3          }
 161   2           NRFWriteReg(W_REGISTER+STATUS,0xff); //½ÓÊÕµ½Êý¾ÝºóRX_DR,TX_DS,MAX_PT¶¼ÖÃ¸ßÎª1£¬Í¨¹ýÐ´1À´Çå³þÖÐ¶Ï±ê
 162   2           CSN=0;
 163   2           NRFSPI(FLUSH_RX);//ÓÃÓÚÇå¿ÕFIFO £¡£¡¹Ø¼ü£¡£¡²»È»»á³öÏÖÒâÏë²»µ½µÄºó¹û£¡£¡£¡´ó¼Ò¼Ç×¡£¡£¡ 
 164   2           CSN=1;    
 165   2           }
 166   1          //NRFWriteReg(W_REGISTER+STATUS,0xff); //½ÓÊÕµ½Êý¾ÝºóRX_DR,TX_DS,MAX_PT¶¼ÖÃ¸ßÎª1£¬Í¨¹ýÐ´1À´Çå³þÖÐ¶Ï±ê 
             -  
 167   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =      5      14
C51 COMPILER V9.54   NRF24L01                                                              04/26/2017 14:51:06 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
